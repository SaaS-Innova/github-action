name: 'Test build app'

on:
  workflow_call: # Allows this workflow to be called from other repositories
    inputs:
      node_version:
        description: 'Node.js version'
        required: true
        type: string
      db_username:
        description: 'Database username'
        required: true
        type: string
      db_password:
        description: 'Database password'
        required: true
        type: string
      db_host:
        description: 'Database host'
        required: true
        type: string
      db_port:
        description: 'Database port'
        required: true
        type: string
      db_name:
        description: 'Database name'
        required: true
        type: string
      max_old_space_size:
          description: 'Maximum old space size for Node.js'
          required: true
          type: string
      test_storage:
          description: 'Test storage path'
          required: false
          type: string
          default: 'test-storage'
      test_tmp:
          description: 'Test storage temp path'
          required: false
          type: string
          default: 'test-temp-storage'
    secrets:
      token_for_github_api:
        description: 'Token to use for GitHub API'
        required: true

jobs:
  test-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ inputs.db_password }}
          POSTGRES_USER: ${{ inputs.db_username }}
          POSTGRES_DB: ${{ inputs.db_name }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - ${{ inputs.db_port }}:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Check Branch Protection & General Repository Settings
        uses: 'SaaS-Innova/github-action@main'
        with:
          repository: ${{ github.repository }}
          token_for_github_api: ${{ secrets.token_for_github_api }}
          
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.token_for_github_api }}
          submodules: true

      - name: Setup Node.js
        id: install-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Build
        run: npm run build

      - name: Run the database migrations
        env:
          DB_USERNAME: ${{ inputs.db_username }}
          DB_PASSWORD: ${{ inputs.db_password }}
          DB_HOST: ${{ inputs.db_host }}
          DB_PORT: ${{ inputs.db_port }}
          DB_DATABASE: ${{ inputs.db_name }}
          TEST_DB_DATABASE: ${{ inputs.db_name }}
        run: npm run migration:run

      - name: Run the tests
        if: ${{ github.base_ref == 'main' }}
        env:
          NODE_OPTIONS: '--max_old_space_size=${{ inputs.max_old_space_size }}'
          DB_USERNAME: ${{ inputs.db_username }}
          DB_PASSWORD: ${{ inputs.db_password }}
          DB_HOST: ${{ inputs.db_host }}
          DB_PORT: ${{ inputs.db_port }}
          DB_DATABASE: ${{ inputs.db_name }}
          TEST_DB_DATABASE: ${{ inputs.db_name }}
          STORAGE_ROOT_PATH: ${{ github.workspace }}/${{ inputs.test_storage }}
          TEMP_ROOT_PATH: ${{ github.workspace }}/${{ inputs.test_tmp }}
          REDIS_HOST: ${{ inputs.db_host }}
          REDIS_PORT: '6379'
          BUCKET_ENDPOINT: 'https://dummy.dummy.dummy'
        run: npm run test:prod
