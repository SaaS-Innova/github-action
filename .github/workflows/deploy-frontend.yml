name: Glesys deployment

on:
    workflow_call:
        inputs:
            target:
                type: string
                required: true
            hostname:
                type: string
                required: true
            user:
                type: string
                required: false
                default: 'jaradat'
            fingerprint:
                type: string
                required: true
            destination:
                type: string
                required: true
            pm2_name:
                type: string
                required: true
            build_path:
                type: string
                required: true
        secrets:
            dotenv_key:
                required: true
                description: "The key for the dotenv file"
            password:
                required: true
                description: "The password for the server"
            token_for_github_api:
              description: 'Token to use for GitHub API'
              required: true

jobs:
    build:
        runs-on: ubuntu-22.04
        timeout-minutes: 30

        steps:
            - name: Check Branch Protection & General Repository Settings
              uses: 'SaaS-Innova/github-action@main'
              with:
                repository: ${{ github.repository }}
                token_for_github_api: ${{ secrets.token_for_github_api }}
                
            - uses: actions/checkout@v3
              with:
                token: ${{ secrets.token_for_github_api }}
                submodules: true

            - name: Setup Node.js 20
              id: install-node
              uses: actions/setup-node@v3
              with:
                  node-version: 22.14.0
                  cache: 'npm'

            - name: npm install base
              run: npm install

            - name: npm run build
              run: npm run build
              env:
                DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
                  
            - name: Compress Repository
              run: zip -r repo.zip ./${{ inputs.BUILD_PATH }}

            - name: Activate ssh-agent
              run: |
                  eval "$( ssh-agent )"
                  printenv|egrep -e SSH_AUTH_SOCK -e SSH_AGENT_PID >> $GITHUB_ENV
                  mkdir ~/.ssh
                  echo "${{ inputs.FINGERPRINT }}" >> ~/.ssh/known_hosts

            - name: Prepare target for deploy
              run: |
                    sshpass -p ${{ secrets.PASSWORD }} ssh -v -o StrictHostKeyChecking=no ${{ inputs.USER }}@${{ inputs.HOSTNAME }} " \
                    rm -rf ${{ inputs.DESTINATION }}/release.old; \
                    rm -rf ${{ inputs.DESTINATION }}/release.new; \
                    mkdir -p ${{ inputs.DESTINATION }}/release; \
                    mkdir ${{ inputs.DESTINATION }}/release.new"

            - name: Copy build files to the Glesys server using scp and sshpass
              run: sshpass -p ${{ secrets.PASSWORD }} scp -o StrictHostKeyChecking=no -r ./repo.zip ${{ inputs.USER }}@${{ inputs.HOSTNAME }}:${{ inputs.DESTINATION }}/release.new

            - name: Glesys server, unzip the compressed file
              run: sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ inputs.USER }}@${{ inputs.HOSTNAME }} "cd ${{ inputs.DESTINATION }}/release.new && unzip -o repo.zip && rm repo.zip"

            - name: Create symlinks and switch folders
              run: |
               sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ inputs.USER }}@${{ inputs.HOSTNAME }} " \
                    mv ${{ inputs.DESTINATION }}/release ${{ inputs.DESTINATION }}/release.old && \
                    mv ${{ inputs.DESTINATION }}/release.new ${{ inputs.DESTINATION }}/release && \
                    cd ${{ inputs.DESTINATION }}/release && pm2 restart ${{ inputs.PM2_NAME }}"
